STACK SEGMENT STACK
    DW 32 DUP(?)
STACK ENDS
 
CODE SEGMENT
    ASSUME  CS:CODE, SS:STACK

START:
MOV AX,OFFSET MIR6;6号中断服务程序的偏移地址
MOV SI,0038H;6号的中断向量起始地址
MOV [SI],AX;****将服务程序地址填入中断向量（占两个字节）
MOV AX,CS
MOV SI,003AH;0038H+02H=003AH
MOV [SI],AX
;至此已填入MIR6的中断向量
CLI
MOV AL,11H
OUT 20H,AL
MOV AL,08H
OUT 21H,AL
MOV AL,04H
OUT 21H,AL
MOV AL,07H
OUT 21H,AL
MOV AL,0AFH
OUT 21H,AL
STI
MOV CX,-1
AA1:
    JMP AA1
MIR6:
    INC CX
    CMP CX,00H
    JZ JUCHI
    CMP CX,01H
    JZ JUXING
    CMP CX,02H
    JZ SANJIAO
    CMP CX,03H
    JZ JIETI
IRET

     ;产生锯齿波
JUCHI:
    MOV DX, 0600H     ;DAC0832接IOY0,0606H为控制端口地址
    MOV AL, 00H       ;AL为数字量
JC1: 
    OUT DX, AL        ;转换为模拟量
    CALL DELAY1       ;延时，此为短延时
    INC AL            
    OUT DX, AL
    CALL DELAY1
    JMP JC1
 
    ;产生矩形波
JUXING:
    MOV DX, 0600H
    MOV AL, 00H       ;先输出00H的波形
    OUT DX, AL
    CALL DELAY2       ;长延时
    MOV AL, 0FFH      ;再输出0FFH的波形
    OUT DX, AL
    CALL DELAY2       ;长延时
    JMP JUXING
 
    ;产生三角波
   
SANJIAO: 
    MOV DX, 0600H
SJ1:
    OUT DX, AL
    CALL DELAY1       ;短延时  
    INC AL            ;将AL从00H步加0FFH
    JNZ SJ1
    DEC AL ;使AL=FFH
    DEC AL ;使AL=FEH，消除平顶
SJ2:
    OUT DX, AL
    CALL DELAY1       ;短延时
    DEC AL            ;将AL从0FFH步减至00H
    JNZ SJ2
SJ3:
    JMP SANJIAO
 
    ;产生阶梯波
    
JIETI:
    MOV AX, 0FEH       
    ;波形振幅最大值为0FFH
    ;考虑到8086的DIV除法可能会出现余数为负导致加起来之后的最大值大于0FFH，故使用0FEH作最大值
    MOV BL,06H         ;阶梯波中的阶梯数，如果想改变阶梯波中的阶梯数请修改这里
    DIV BL             ;用最大振幅除以阶梯数，得到每个台阶的高度
    MOV BL, AL         ;将上述除法的商保存在BL中
    MOV BH, 00H        ;BH置0
    MOV AX,0000H       ;AX初始化0000H
JT1:
    MOV DX, 0600H
    OUT DX, AL
    CMP AX, 00FEH      ;判断AX是否达到幅度上线
    JAE JT2            ;达到上限，表示一次阶梯波完整生成，开始新一次生成
    CALL DELAY2        ;长延时
    ADD AX, BX         ;用当前阶梯高度加上每个阶梯的高度得到下一阶梯的高度
    JMP JT1
JT2:    
    JMP JIETI
 
 
DELAY1:                ;短延时
    PUSH CX
    MOV CX, 01FFH
D1: 
    PUSH AX
    POP AX
    LOOP D1
    POP CX
    RET
 
DELAY2:               ;长延时
    PUSH CX
    MOV CX, 0FFFFH
D2: 
    PUSH AX
    POP AX
    LOOP D2
    POP CX
    RET


CODE ENDS
    END START