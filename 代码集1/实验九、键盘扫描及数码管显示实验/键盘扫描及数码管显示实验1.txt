A8255_A EQU 0600H
A8255_B EQU 0602H
A8255_C EQU 0604H
A8255_CON EQU 0606H   
ROWOUT EQU 200H

DATA    SEGMENT  
    TABLE DB 11101110B 
          DB 11101101B
          DB 11101011B
          DB 11100111B
          DB 11011110B
          DB 11011101B
          DB 11011011B
          DB 11010111B
          DB 10111110B
          DB 10111101B
          DB 10111011B
          DB 10110111B
          DB 01111110B
          DB 01111101B
          DB 01111011B
          DB 01110111B 
    VALUE   DB 3FH    ;0
            DB 06H    ;1
            DB 5BH    ;2
            DB 4FH    ;3
            DB 66H    ;4
            DB 6DH    ;5
            DB 7DH    ;6
            DB 07H    ;7
            DB 7FH    ;8
            DB 6FH    ;9     
            DB 77H    ;A
            DB 7CH    ;B
            DB 39H    ;C
            DB 5EH    ;D
            DB 79H    ;E
            DB 71H    ;F  
    TEMP    DB 0H
    POS1    DB 0H
    POS2    DB 0H
DATA    ENDS  
CODE SEGMENT
    ASSUME CODE:CS,DS:DATA
KEY PROC FAR  ;段间远调用
START:
    PUSH DS   ;保存DS       
    MOV AX,0  ;AX清0         
    PUSH AX   ;保存AX
    MOV AX,DATA
    MOV DS,AX   
    
    MOV DX,A8255_CON
    MOV AL,80H
    OUT DX,AL          ;设置8255的工作方式
    
    MOV DX,A8255_B
    MOV AL,00H      
    OUT DX,AL          ;开放所有端口
    MOV DX,A8255_A
    MOV AL,00H      
    OUT DX,AL          ;让所有灯熄灭
         
X1: 	;检验是否有按键按下
    MOV DX,ROWOUT   ;设置行输出端口
    MOV AL,00H
    OUT DX,AL       ;行输出0000，准备检查是否有任何键按下
    INC DX          ;设置列输入端口地址ROWOUT+1
    IN AL,DX        ;输入线状态
    AND AL,0FH      ;析取D3~D0列信号线
    CMP AL,0FH
    JZ X1           ;没有任何键按下，继续查询
    CALL D20ms      ;有键按下，延时消抖
    MOV DX,ROWOUT    
    MOV AL,00H
    OUT DX,AL       ;消抖后确定是否有任何键按下
    INC DX         
    IN AL,DX        ;读入列线状态
    AND AL,0FH      ;析取D3~D0列信号线
    CMP AL,0FH
    JZ X1           ;此时，说明延时消抖前的按键判断是源于干扰
                    ;或者，延时消抖时间不足，重新查询


    MOV AH,11111110B ;设置行扫描初值，首先扫描第0行
    MOV CX,4        ;设置行扫描初值，共4行

X2: 	;扫描键盘，获取具体按键
    MOV DX,ROWOUT   ;设置行输出端口地址
    MOV AL,AH       ;传递行扫描值
    OUT DX,AL       ;行扫描值输出,准备检查在哪一列
    INC DX          
    IN AL,DX
    AND AL,0FH
    CMP AL,0FH
    JNZ X3          ;找到按键所在的列号，转X3
    ROL AH,1
    LOOP X2
    MOV AX,80H     ;4行全部扫描完，却未发现有键按下（可
                   ;能出现了干扰），以80H作为这种情况的标志
                   ;该指令的设置，主要考虑到程序的完备性，
                   ;即可以使程序在任何情况下都能正确执行
    JMP XEND

X3: 	;计算按键值
    MOV CL,4
    SHL AH,CL      ;AH逻辑左移4位，将低4位的行号移到高4位
    OR  AL,AH      ;行号与列号'或',形成键的位置码
    LEA BX,TABLE   ;设置TABLE位置码表的指针
    MOV CL,0       ;设置键号初值为0

X4: 
    CMP AL,[BX]    ;在TABLE中查找本次形成的键位置码
    JZ X5          ;找到则转X5,对应键号就在CL中
    INC CL
    INC BX
    CMP CL,10H
    JNZ X4
    MOV AH,0FFH    ;CL等于10H，说明在TABLE表中没有找到
                   ;对应的键位置吗，其原因可能是出现了重建
                   ;的情况，以0FFH作为这种情况的标志
    JMP XEND

X5: 
    MOV AH,CL      ;将CL中保存的键号传到AH中
    CALL LMOVESHOW
    CALL RESET
    MOV DX,A8255_A
    MOV AL,11011111B
    OUT DX,AL
    MOV DX,A8255_B
    MOV AL,AH
    OUT DX,AL
    JMP X1

LMOVESHOW:         ;将数码管上每个显示灯上的段码移到其左边的显示灯上
    PUSH AX  
    PUSH CX
    MOV CX,5
    MOV POS1,11111101B   ;将显示灯位码放入POS1中
    MOV POS2,11111110B   ;将上面显示灯左边的位码放入POS2中 

X7: 
    CALL RESET
    MOV DX,A8255_A     
    MOV AL,POS1
    OUT DX,AL           ;选中位码为POS1的显示灯
    MOV DX,A8255_B     
    PUSH AX
    IN  AL,DX           ;读取其段码到TEMP中   
    MOV TEMP,AL
    POP AX
    MOV DX,A8255_A     
    MOV AL,POS2
    OUT DX,AL           ;选中位码为POS2的显示灯
    MOV DX,A8255_B
    MOV AL,TEMP
    OUT DX,AL           ;将POS1处的段码送入POS2处
    ROL POS1,1          ;POS1,POS2均循环左移1位
    ROL POS2,1
    LOOP X7
    POP CX
    POP AX    
    RET  

RESET:       ;保持显示灯状态
    PUSH AX
    PUSH DX
    MOV DX,A8255_A
    MOV AL,00H
    OUT DX,AL
    POP DX
    POP AX
    RET    

XEND:
    NOP
    RET                      
                              
D20ms:
    PUSH CX
    MOV CX,0FH
X:  LOOP X
    POP CX
    RET  
KEY ENDP

CODE ENDS
    END START